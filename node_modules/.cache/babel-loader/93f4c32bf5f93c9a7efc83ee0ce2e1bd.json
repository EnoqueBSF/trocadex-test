{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\enoqu\\\\Desktop\\\\Analise Trocadex\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\enoqu\\\\Desktop\\\\Analise Trocadex\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\enoqu\\\\Desktop\\\\Analise Trocadex\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\enoqu\\\\Desktop\\\\Analise Trocadex\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\enoqu\\\\Desktop\\\\Analise Trocadex\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\enoqu\\\\Desktop\\\\Analise Trocadex\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\enoqu\\\\Desktop\\\\Analise Trocadex\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\enoqu\\\\Desktop\\\\Analise Trocadex\\\\src\\\\components\\\\Table\\\\CoinsTable.jsx\";\nimport React from 'react';\nimport { Table, Badge } from 'reactstrap';\nimport CoinGecko from 'coingecko-api';\n\nvar CoinsTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CoinsTable, _React$Component);\n\n  function CoinsTable(props) {\n    var _this;\n\n    _classCallCheck(this, CoinsTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CoinsTable).call(this, props));\n    _this.state = {\n      exchanges: [],\n      tickers: [],\n      coinName: ''\n    };\n    _this.CoinGeckoClient = new CoinGecko();\n    return _this;\n  }\n\n  _createClass(CoinsTable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getExchanges();\n      this.fetchTickers('electroneum');\n    }\n  }, {\n    key: \"getExchanges\",\n    value: function () {\n      var _getExchanges = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.CoinGeckoClient.exchanges.all({}).then(function (data) {\n                  _this2.setState({\n                    exchanges: data.data\n                  });\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getExchanges() {\n        return _getExchanges.apply(this, arguments);\n      }\n\n      return getExchanges;\n    }()\n  }, {\n    key: \"fetchTickers\",\n    value: function () {\n      var _fetchTickers = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(coinId) {\n        var _this3 = this;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.CoinGeckoClient.coins.fetchTickers(coinId).then(function (data) {\n                  _this3.setState({\n                    coinName: data.data.name,\n                    tickers: data.data.tickers\n                  });\n                });\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function fetchTickers(_x) {\n        return _fetchTickers.apply(this, arguments);\n      }\n\n      return fetchTickers;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var tickers = this.state.tickers;\n      return React.createElement(Table, {\n        className: \"align-items-center table-flush\",\n        responsive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"#\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Troca\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Par\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Pre\\xE7o\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Spread\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"2% Profundidade\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"-2% Profundidade\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Volume 24h\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Volume %\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Ultima negocia\\xE7\\xE3o\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Trust Score\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Taxa ETN\\\\BTC\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Taxa retirada BTC\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, tickers.map(function (ticker, index) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, index), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, ticker.market.name), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: ticker.trade_url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, \"\".concat(ticker.base, \"/\").concat(ticker.target))), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"\".concat(ticker.last.toFixed(10), \" \").concat(ticker.target)), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, Number(ticker.bid_ask_spread_percentage).toFixed(2), \"%\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, \"2% Profundidade\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, \"-2% Profundidade\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, ticker.converted_volume.btc, \" BTC\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, \"Volume %\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, \"\".concat(String(new Date(ticker.last_traded_at).toLocaleDateString('pt-BR')), \" \\xE0s \").concat(String(new Date(ticker.last_traded_at).toLocaleTimeString('pt-BR')))), React.createElement(\"th\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, React.createElement(Badge, {\n          style: {\n            backgroundColor: 'transparent',\n            color: ticker.trust_score\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fas fa-circle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }))), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, \"Taxa ETC/BTC\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, \"Taxa retirada BTC\"));\n      })));\n    }\n  }]);\n\n  return CoinsTable;\n}(React.Component);\n\nexport default CoinsTable;","map":{"version":3,"sources":["C:/Users/enoqu/Desktop/Analise Trocadex/src/components/Table/CoinsTable.jsx"],"names":["React","Table","Badge","CoinGecko","CoinsTable","props","state","exchanges","tickers","coinName","CoinGeckoClient","getExchanges","fetchTickers","all","then","data","setState","coinId","coins","name","map","ticker","index","market","trade_url","base","target","last","toFixed","Number","bid_ask_spread_percentage","converted_volume","btc","String","Date","last_traded_at","toLocaleDateString","toLocaleTimeString","backgroundColor","color","trust_score","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Table, Badge } from 'reactstrap';\r\nimport CoinGecko from 'coingecko-api';\r\n\r\nclass CoinsTable extends React.Component {\r\n    state = {\r\n        exchanges: [],\r\n        tickers: [],\r\n        coinName: ''\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.CoinGeckoClient = new CoinGecko();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getExchanges();\r\n        this.fetchTickers('electroneum')\r\n    }\r\n\r\n    async getExchanges() {\r\n        await this.CoinGeckoClient.exchanges.all({})\r\n        .then(data => {\r\n            this.setState({\r\n                exchanges: data.data\r\n            });\r\n        })\r\n    }\r\n\r\n    async fetchTickers(coinId) {\r\n        await this.CoinGeckoClient.coins.fetchTickers(coinId)\r\n        .then(data => {\r\n            this.setState({\r\n                coinName: data.data.name,\r\n                tickers: data.data.tickers\r\n            });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { tickers} = this.state;\r\n        return (\r\n            <Table className=\"align-items-center table-flush\" responsive>\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Troca</th>\r\n                        <th>Par</th>\r\n                        <th>Preço</th>\r\n                        <th>Spread</th>\r\n                        <th>2% Profundidade</th>\r\n                        <th>-2% Profundidade</th>\r\n                        <th>Volume 24h</th>\r\n                        <th>Volume %</th>\r\n                        <th>Ultima negociação</th>\r\n                        <th>Trust Score</th>\r\n                        <th>Taxa ETN\\BTC</th>\r\n                        <th>Taxa retirada BTC</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {tickers.map((ticker, index) => {\r\n                        return (\r\n                            <tr>\r\n                                <th>{index}</th>\r\n                                <th>{ticker.market.name}</th>\r\n                                <th>\r\n                                    <a href={ticker.trade_url}>\r\n                                        {`${ticker.base}/${ticker.target}`}\r\n                                    </a>\r\n                                </th>\r\n                                <th>{`${ticker.last.toFixed(10)} ${ticker.target}`}</th>\r\n                                <th>{Number(ticker.bid_ask_spread_percentage).toFixed(2)}%</th>\r\n                                <th>2% Profundidade</th>\r\n                                <th>-2% Profundidade</th>\r\n                                <th>{ticker.converted_volume.btc} BTC</th>\r\n                                <th>Volume %</th>\r\n                                <th>\r\n                                    {`${String(new Date(ticker.last_traded_at).toLocaleDateString('pt-BR'))} às ${String(new Date(ticker.last_traded_at).toLocaleTimeString('pt-BR'))}`}\r\n                                    </th>\r\n                                <th className=\"text-center\">\r\n                                    <Badge\r\n                                    style={{\r\n                                        backgroundColor: 'transparent',\r\n                                        color: ticker.trust_score\r\n                                    }}>\r\n                                        <i className=\"fas fa-circle\"/>\r\n                                    </Badge>\r\n                                </th>\r\n                                <th>Taxa ETC/BTC</th>\r\n                                <th>Taxa retirada BTC</th>\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </Table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CoinsTable;"]},"metadata":{},"sourceType":"module"}